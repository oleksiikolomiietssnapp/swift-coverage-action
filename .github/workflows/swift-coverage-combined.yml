name: Post Combined Coverage Comment

on:
  workflow_call:
    inputs:
      jobs-json:
        description: 'JSON array of coverage jobs with name, coverage, and table'
        required: true
        type: string
      comment-header:
        description: 'Header for the coverage comment'
        required: false
        type: string
        default: '## 📊 Coverage Report'

jobs:
  post-comment:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            const jobsData = JSON.parse(`${{ inputs.jobs-json }}`);
            const headerText = `${{ inputs.comment-header }}`;

            // Check if all tables are identical
            const firstTable = jobsData[0].table;
            const allTablesIdentical = jobsData.every(job => job.table === firstTable);

            let comment = '';

            if (jobsData.length === 1) {
              // Single job: show simple coverage report
              comment = headerText + '\n\n' +
                '**Configuration:** ' + jobsData[0].name + '\n\n' +
                jobsData[0].table + '\n\n' +
                '---\n' +
                '_Generated by [Swift Coverage Action](https://github.com/oleksiikolomiietssnapp/swift-coverage-action)_';
            } else if (allTablesIdentical) {
              // Multiple jobs with identical coverage: show one table with all configs listed
              const configsList = jobsData.map(j => '**' + j.name + '** (' + j.coverage + '%)').join(', ');
              comment = headerText + '\n\n' +
                firstTable + '\n\n' +
                '> ℹ️ All configurations show identical coverage: ' + configsList + '\n\n' +
                '---\n' +
                '_Generated by [Swift Coverage Action](https://github.com/oleksiikolomiietssnapp/swift-coverage-action)_';
            } else {
              // Multiple jobs with different coverage: show summary + collapsible details
              let summaryTable = '| Configuration | Overall Coverage |\n|--------------|:----------------:|\n';
              let detailsSections = '';

              jobsData.forEach(job => {
                summaryTable += '| ' + job.name + ' | **' + job.coverage + '%** |\n';
                detailsSections += '<details>\n<summary>📋 Detailed Coverage - ' + job.name + '</summary>\n\n' +
                  job.table + '\n\n</details>\n\n';
              });

              comment = headerText + '\n\n' +
                summaryTable + '\n' +
                detailsSections +
                '---\n' +
                '_Generated by [Swift Coverage Action](https://github.com/oleksiikolomiietssnapp/swift-coverage-action)_';
            }

            // Fetch existing comments
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
            });

            // Delete previous coverage comments
            const botComments = comments.data.filter(c =>
              c.body.includes(headerText)
            );

            for (const botComment of botComments) {
              await github.rest.issues.deleteComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
              });
            }

            // Post new comment
            await github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment,
            });
