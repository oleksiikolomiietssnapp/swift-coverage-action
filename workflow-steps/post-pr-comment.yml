name: Post PR Coverage Comment

on:
  workflow_call:
    inputs:
      coverage-comment-header:
        description: 'Header for coverage comment'
        required: false
        type: string
        default: '### üõ°Ô∏è Code Coverage Report'
      job-name:
        description: 'Job identifier for comment tracking'
        required: false
        type: string
        default: ''

env:
  COVERAGE_SUMMARY_FILE: '${{ github.workspace }}/coverage_summary.txt'

runs:
  using: composite
  steps:
    - name: Comment on Pull Request
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const coverageOutput = fs.readFileSync('${{ env.COVERAGE_SUMMARY_FILE }}', 'utf8');
          const workflowName = '${{ github.workflow }}';
          const jobName = '${{ github.job }}';
          const customJobName = '${{ inputs.job-name }}';
          const jobId = customJobName || \`\${workflowName}:\${jobName}\`;
          const commentMarker = \`<!-- swift-coverage-id: \${jobId} -->\`;
          const thresholdStr = '${{ steps.extract.outputs.threshold }}';
          const threshold = thresholdStr ? parseInt(thresholdStr, 10) : null;
          let thresholdSection = '';
          if (threshold !== null && threshold !== undefined) {
            thresholdSection = \`
          <details>
          <summary><b>Details</b></summary>

          ### Threshold - \${threshold}%
            - ‚ö†Ô∏è below
            - ‚úÖ meets

          </details>
          \`;
          }
          const header = '${{ inputs.coverage-comment-header }}';
          const newComment = \`
          \${header}

          \${coverageOutput}
          \${thresholdSection}
          _Generated by [Swift Coverage Action](https://github.com/oleksiikolomiietssnapp/swift-coverage-action)._
          \${commentMarker}
          \`;
          try {
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
            });
            const botComments = comments.data.filter(comment =>
              comment.body.includes(commentMarker)
            );
            for (const botComment of botComments) {
              await github.rest.issues.deleteComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
              });
            }
            await github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: newComment,
            });
            console.log(\`‚úÖ Coverage comment posted successfully (ID: \${jobId})\`);
          } catch (error) {
            if (error.status === 403) {
              core.warning(\`‚ö†Ô∏è Cannot post coverage comment due to insufficient permissions.\n\nThis typically happens when:\n1. The workflow token doesn't have 'pull-requests: write' scope\n2. The repository has branch protection rules requiring specific reviews\n3. The action is running on a forked repository\n\nTo fix this, ensure your workflow has the proper permissions:\n\n\\\`\\\`\\\`yaml\npermissions:\n  pull-requests: write\n  contents: read\n\\\`\\\`\\\`\n\nThe coverage data has been calculated successfully and is available in the workflow logs.\`);
            } else {
              throw error;
            }
          }
